=============================================================================
List of generated methods in project: CF2_0

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "MotorR"    (bean PWM)
   - MotorR_SetRatio16 -This method sets a new duty-cycle ratio. Ratio is expressed as a 16-bit unsigned integer number. 0 - 
                FFFF value is proportional to ratio 0 - 100%. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.   Note: Calculated duty depends on the timer 
                possibilities and on the selected period.

Module "MotorL"    (bean PWM)
   - MotorL_SetRatio16 -This method sets a new duty-cycle ratio. Ratio is expressed as a 16-bit unsigned integer number. 0 - 
                FFFF value is proportional to ratio 0 - 100%. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.   Note: Calculated duty depends on the timer 
                possibilities and on the selected period.

Module "UART"      (bean AsynchroSerial)
   - UART_Enable -Enables the bean - it starts the send and receive functions. Events may be generated 
                ("DisableEvent"/"EnableEvent").
   - UART_Disable -Disables the bean - it stops the send and receive functions. No events will be generated.
   - UART_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code (it does not 
                wait for data). This method is enabled only if the receiver property is enabled.  [Note:] Because the preferred 
                method to handle error and break exception in the interrupt mode is to use events <OnError> and <OnBreak> the 
                return value ERR_RXEMPTY has higher priority than other error codes. As a consequence the information about an 
                exception in interrupt mode is returned only if there is a valid character ready to be read. Version specific 
                information for Freescale 56800 derivatives ]   DMA mode:  If DMA controller is available on the selected CPU 
                and the receiver is configured to use DMA controller then this method only sets the selected DMA channel. Then 
                the status of the DMA transfer can be checked using GetCharsInRxBuf method. See an example of a typical usage 
                for details about the communication using DMA.
   - UART_SendChar -Sends one character to the channel. If the bean is temporarily disabled (Disable method) SendChar method 
                only stores data into an output buffer. In case of a zero output buffer size, only one character can be stored. 
                Enabling the bean (Enable method) starts the transmission of the stored data. This method is available only if 
                the transmitter property is enabled.  Version specific information for Freescale 56800 derivatives ]   DMA mode:
                If DMA controller is available on the selected CPU and the transmitter is configured to use DMA controller then 
                this method only sets selected DMA channel. Then the status of the DMA transfer can be checked using 
                GetCharsInTxBuf method. See an example of a typical usage for details about communication using DMA.

Module "ADCon"     (bean ADC)
   - ADCon_Measure -This method performs one measurement on all channels that are set in the bean inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - ADCon_MeasureChan -This method performs measurement on one channel. (Note: If the <number of conversions> is more than one 
                the conversion of the A/D channel is performed specified number of times.)
   - ADCon_GetValue16 -This method returns the last measured values of all channels justified to the left. Compared with 
                <GetValue> method this method returns more accurate result if the <number of conversions> is greater than 1 and 
                <AD resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - ADCon_GetChanValue16 -This method returns the last measured value of the required channel justified to the left. Compared 
                with <GetChanValue> method this method returns more accurate result if the <number of conversions> is greater 
                than 1 and <AD resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is 
                eliminated.

Module "CtrlTimer" (bean TimerInt)
   - CtrlTimer_Enable -This method enables the bean - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - CtrlTimer_Disable -This method disables the bean - it stops the timer. No events will be generated.

Module "LED0"      (bean BitIO)
   - LED0_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - LED0_PutVal -The specified output value is set. If the direction is [input], the bean saves the value to a memory or a 
                register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED0_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - LED0_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the 
                direction = _[output]_ or _[input/output]_.
   - LED0_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "LeftCnt"   (bean EventCntr16)
   - LeftCnt_Reset -This method resets the external event counter (sets it to zero).
   - LeftCnt_GetNumEvents -This method returns the number of the external events.

Module "RightCnt"  (bean EventCntr16)
   - RightCnt_Reset -This method resets the external event counter (sets it to zero).
   - RightCnt_GetNumEvents -This method returns the number of the external events.

Module "LeftDir"   (bean BitIO)
   - LeftDir_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "RightDir"  (bean BitIO)
   - RightDir_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "KEY0"      (bean BitIO)
   - KEY0_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "KEY1"      (bean BitIO)
   - KEY1_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "KEY2"      (bean BitIO)
   - KEY2_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "KEY3"      (bean BitIO)
   - KEY3_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "Cpu"       (bean MCF52255_100_LQFP)
   - Cpu_EnableInt -Enables all maskable interrupts. This method sets the interrupt level mask group in the SR register by 
                value = 0.
   - Cpu_DisableInt -Disables all maskable interrupts. This method sets the interrupt level mask group in the SR register by 
                value = 7.
   - Cpu_SetIntLevel -Sets the interrupt level mask in the SR register. Interrupt requests are inhibited for all priority 
                levels less than or equal to current level, except edge-sensitive level 7 request, which cannot be masked.
   - Cpu_Delay100US -This method realizes software delay. The length of delay is at least 100 microsecond multiply input 
                parameter [us100]. As the delay implementation is not based on real clock, the delay time may be increased by 
                interrupt service routines processed during the delay. The method is independent on selected speed mode.

===================================================================================
